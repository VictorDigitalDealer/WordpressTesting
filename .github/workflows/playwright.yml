name: Playwright Daily @16:00 UTC

on:
  schedule:
    - cron: "0 16 * * *"  # 16:00 UTC (18:00 Europe/Madrid ahora)
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: playwright-daily
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      # No pases --reporter en CLI; usamos lo definido en playwright.config.*
      - name: Run tests (capture exit code)
        id: run_tests
        shell: bash
        run: |
          set +e
          npx playwright test
          CODE=$?
          echo "exit_code=$CODE" >> "$GITHUB_OUTPUT"
          exit 0

      - name: Zip HTML report (always)
        if: always()
        shell: bash
        run: |
          if [ -d "playwright-report" ]; then
            zip -rq playwright-report.zip playwright-report
          fi

      - name: Upload HTML report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 7
          if-no-files-found: warn

      - name: Upload results JSON (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: playwright-results.json
          retention-days: 7
          if-no-files-found: warn

      # Subimos media sin warnings solo si existe
      - name: Upload videos & screenshots (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: media
          path: test-results
          retention-days: 7
          if-no-files-found: ignore

      - name: Build pretty email (Node)
        if: always()
        run: node scripts/render-email.mjs
        env:
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
          STATUS: ${{ steps.run_tests.outputs.exit_code == '0' && 'passed' || 'failed' }}
          COMMIT_SHA: ${{ github.sha }}
          ACTOR: ${{ github.actor }}

      - name: Show email header (debug)
        if: always()
        run: |
          head -n 30 email.html || true
        

      # Chequea tamaño del ZIP (8MB máx adjunto)
      - name: Check ZIP size
        if: always()
        id: zipcheck
        shell: bash
        run: |
          if [ -f "playwright-report.zip" ]; then
            SIZE=$( (stat -c%s playwright-report.zip 2>/dev/null || stat -f%z playwright-report.zip) )
            echo "size=$SIZE" >> "$GITHUB_OUTPUT"
            if [ "$SIZE" -le 8000000 ]; then
              echo "ok=true" >> "$GITHUB_OUTPUT"
            else
              echo "ok=false" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "ok=false" >> "$GITHUB_OUTPUT"

      # ENVÍO con 465+SSL (tu caso)
      - name: Send email (with ZIP)
        if: always() && steps.zipcheck.outputs.ok == 'true'
        uses: dawidd6/action-send-mail@v6
        with:
          server_address: ${{ secrets.SMTP_HOST }}
          server_port: 465
          secure: true
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASS }}
          from: ${{ secrets.SMTP_USER }}
          to: ${{ secrets.REPORT_TO }}
          subject: "${{ steps.run_tests.outputs.exit_code == '0' && '✅' || '❌' }} Playwright – ${{ github.repository }}@${{ github.ref_name }}"
          # cuerpo de texto (fallback)
          body: |
            Resultados Playwright: ${{ steps.run_tests.outputs.exit_code == '0' && 'PASSED' || 'FAILED' }}
            Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          # cuerpo HTML desde archivo
          html_body: file://email.html
          attachments: |
            playwright-report.zip


      - name: Send email (no attachment)
        if: always() && (steps.zipcheck.outputs.ok != 'true')
        uses: dawidd6/action-send-mail@v6
        with:
          server_address: ${{ secrets.SMTP_HOST }}
          server_port: 465
          secure: true
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASS }}
          from: ${{ secrets.SMTP_USER }}
          to: ${{ secrets.REPORT_TO }}
          subject: "${{ steps.run_tests.outputs.exit_code == '0' && '✅' || '❌' }} Playwright – ${{ github.repository }}@${{ github.ref_name }}"
          body: |
            Resultados Playwright: ${{ steps.run_tests.outputs.exit_code == '0' && 'PASSED' || 'FAILED' }}
            Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          html_body: file://email.html
          
